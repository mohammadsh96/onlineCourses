// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  email         String         @unique
  password      String
  role          String   @default("student")  
  refreshTokens RefreshToken[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  products Courses[] @relation("UserCourses")
  subscription Subscription[] @relation("usersSubscription")
 comments Comments[] @relation("usersComments")

}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
     
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model Courses { 
   id Int @id @default(autoincrement())
   name String 
   cost Int 
   info String? 
   rate Float @default(0)
   subscribers Int @default(0)
   daysInWeek Int? @default(3)
   weeks Int?  @default(12)
   likes Int @default(0)
   createdAt DateTime @default(now())
   user User @relation( fields: [userId], references: [id]  , name: "UserCourses" )
   userId String 
 category Category @relation(fields: [categoryId], references: [id] , name: "coursesCategory")
 categoryId Int 
 subscription Subscription[] @relation("courseSubscription")
 comments Comments[] @relation("courseComments")
}
model Category {
  id Int @id @default(autoincrement()) 
  name String @unique
  products Courses[]   @relation("coursesCategory")
  
}
model Subscription {
id Int @id @default(autoincrement())
courseId Int 
course Courses @relation(fields: [courseId], references: [id] , name: "courseSubscription")
userId String
users User @relation(fields: [userId], references: [id] , name: "usersSubscription")

}
model Comments {
id Int @id @default(autoincrement())
comment String? 
courseId Int 
course Courses @relation(fields: [courseId], references: [id] , name: "courseComments")
userId String
users User @relation(fields: [userId], references: [id] , name: "usersComments")

}